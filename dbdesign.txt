Database Schema
Users
user_id (PK): UUID - User Identifier
username: VARCHAR(50) - Display Name
email: VARCHAR(100) - Login Email
password_hash: VARCHAR(255) - Encrypted Password
phone_number: VARCHAR(20) - Phone Number
bio: TEXT - About Me
avatar_url: VARCHAR(255) - Profile Photo URL
cover_photo_url: VARCHAR(255) - Cover Photo URL
date_of_birth: DATE - Date of Birth
gender: ENUM('male', 'female', 'other') - Gender
country: VARCHAR(100) - Country
city: VARCHAR(100) - City
is_verified: BOOLEAN - Verified or not
is_chef: BOOLEAN - Marked as a professional chef
followers_count: INT - Number of followers (denormalized)
following_count: INT - Number of followers (denormalized)
posts_count: INT - Number of posts (denormalized)
total_likes: INT - Total number of likes (denormalized)
created_at: TIMESTAMP - Time of account creation
updated_at: TIMESTAMP - Time of information update
last_login: TIMESTAMP - Last login
status: ENUM('active', 'inactive', 'banned') - Account status
notification_settings: JSON - Notification settings

UserFollowers (Followers)
follow_id (PK): UUID - Follow id
follower_id (FK): UUID - ID of the Follower (from Users)
following_id (FK): UUID - The followed user ID  (from Users)
created_at: TIMESTAMP - Followed timestamp
Index: (follower_id, following_id) - Unique

Posts
post_id (PK): UUID - Post identifier
user_id (FK): UUID - Reference to Users table
content_type: ENUM('video', 'image', 'text', 'multi') - Content type
title: VARCHAR(255) - Post title
description: TEXT - Description post
cooking_time: INT - Cooking time (minutes)
difficulty_level: ENUM('easy', 'medium', 'hard', 'expert') - Difficulty
serving_size: INT - Serving size
has_recipe: BOOLEAN - Is there a recipe included
is_premium: BOOLEAN - Is the recipe paid for
premium_price: DECIMAL(10,2) - Price to view recipe
views_count: INT - Number of views
likes_count: INT - Number of likes (denormalized)
comments_count: INT - Number of comments (denormalized)
shares_count: INT - Number of shares (denormalized)
created_at: TIMESTAMP - Time created
updated_at: TIMESTAMP - Time updated
status: ENUM('published', 'draft', 'archived', 'reported', 'removed') - Status
is_featured: BOOLEAN - Is it recommended yet
Indexes: user_id, content_type, created_at
PostMedia (Media of the post)
media_id (PK): UUID - Media identifier
post_id (FK): UUID - Reference to the Posts table
media_type: ENUM('video', 'image') - Media type
media_url: VARCHAR(255) - Media URL
thumbnail_url: VARCHAR(255) - Thumbnail URL
duration: INT - Duration (for video, in seconds)
width: INT - Width
height: INT - Height
file_size: INT - File size (KB)
position: INT - Sort position (for multiple media)
created_at: TIMESTAMP - Creation time
Indexes: post_id
Tags (Tags)
tag_id (PK): UUID - Tag identifier
name: VARCHAR(100) - Name tags
slug: VARCHAR(100) - URL-friendly tag name
post_count: INT - Number of posts with this tag (denormalized)
created_at: TIMESTAMP - Creation time
Index: name (unique), slug (unique)


PostTags (Relationship between Post and Tag)
post_tag_id (PK): UUID - Identifier
post_id (FK): UUID - Reference to Posts table
tag_id (FK): UUID - Reference to Tags table
created_at: TIMESTAMP - Creation time
Index: (post_id, tag_id) - Unique
Recipes (Recipes)
recipe_id (PK): UUID - Recipe identifier
post_id (FK): UUID - Reference to Posts table
name: VARCHAR(255) - Recipe name
cuisine_type: VARCHAR(100) - Cuisine type (Vietnamese, Italian, Japanese, etc.)
meal_type: ENUM('breakfast', 'lunch', 'dinner', 'dessert', 'snack', 'appetizer') - Meal type
dietary_info: SET('vegetarian', 'vegan', 'gluten-free', 'dairy-free', 'low-carb', 'keto') - Nutritional information
calories: INT - Calories
protein: DECIMAL(5,2) - Protein (g)
carbs: DECIMAL(5,2) - Carbohydrates (g)
fat: DECIMAL(5,2) - Fat (g)
preparation_time: INT - Preparation time (min)
cooking_time: INT - Cooking time (min)
Difficulty: enum(‘low’,
total_time: INT - Total time (min)
created_at: TIMESTAMP - Time created
updated_at: TIMESTAMP - Time of update
Index: post_id (unique)
RecipeIngredients (Ingredients for the recipe)
ingredient_id (PK): UUID - Ingredient identifier
recipe_id (FK): UUID - Reference to the Recipes table
name: VARCHAR(100) - Ingredient name
quantity: DECIMAL(10,2) - Quantity
unit: VARCHAR(50) - Unit (gram, ml, spoon, etc.)
note: TEXT - Additional note
is_optional: BOOLEAN - Can be omitted
position: INT - Display order
created_at: TIMESTAMP - Time of creation
Index: recipe_id
RecipeSteps (Steps to make the recipe)
step_id (PK): UUID - Ingredient identifier
recipe_id (FK): UUID - Reference to the Recipes table
step_number: INT - Step number
description: TEXT - Step description
media_url: VARCHAR(255) - Illustrative media URL (if any)
duration: INT - Time taken (minutes)
tip: TEXT - Tip for this step
created_at: TIMESTAMP - Time created
Index: recipe_id, step_number
Comments
comment_id (PK): UUID - Comment identifier
post_id (FK): UUID - Reference to Posts table
user_id (FK): UUID - Reference to Users table
parent_comment_id (FK, nullable): UUID - Reference to parent comment (if reply)
content: TEXT - Comment content
argument
likes_count: INT - Number of likes (denormalized)
created_at: TIMESTAMP - Time created
updated_at: TIMESTAMP - Time updated
status: ENUM('active', 'deleted', 'hidden') - Status
Indexes: post_id, user_id, parent_comment_id

Likes
like_id (PK): UUID - Like identifier
user_id (FK): UUID - Reference to Users table
content_type: ENUM('post', 'comment') - Liked object
content_id: UUID - ID of liked object
created_at: TIMESTAMP - Time created
Index: (user_id, content_type, content_id) - Unique
Index: content_type, content_id
Shares
share_id (PK): UUID - Share identifier
post_id (FK): UUID - Reference to Posts table
user_id (FK): UUID - Reference to Users table
share_platform: ENUM('app', 'facebook', 'twitter', 'instagram', 'whatsapp', 'other') - Sharing platform
created_at: TIMESTAMP - Time created
Index: post_id, user_id
RecipePurchases (Recipe Purchases)
purchase_id (PK): UUID - Purchase identifier
user_id (FK): UUID - Reference to Users table
recipe_id (FK): UUID - Reference to Recipes table
post_id (FK): UUID - Reference to Posts table
amount: DECIMAL(10,2) - Payment amount
payment_method: VARCHAR(50) - Payment method
payment_status: ENUM('pending', 'completed', 'failed', 'refunded') - Payment status payment
transaction_id: VARCHAR(255) - Payment Gateway Transaction ID
created_at: TIMESTAMP - Creation Time
Index: user_id, recipe_id, (user_id, recipe_id) - Unique
UserWallet
wallet_id (PK): UUID - Wallet Identifier
user_id (FK): UUID - Reference to Users table
balance: DECIMAL(12,2) - Balance
currency: VARCHAR(3) - Currency
created_at: TIMESTAMP - Creation Time
updated_at: TIMESTAMP - Update Time
Index: user_id (unique)
WalletTransactions
transaction_id (PK): UUID - Transaction Identifier
wallet_id (FK): UUID - Reference to UserWallet table
amount: DECIMAL(12,2) - Transaction Amount
type: ENUM('deposit', 'withdrawal', 'recipe_purchase', 'recipe_sale', 'product_purchase', 'product_sale', 'refund') - Transaction type
status: ENUM('pending', 'completed', 'failed', 'cancelled') - Status
reference_id: UUID - Reference ID (purchase_id, order_id, etc.)
description: TEXT - Transaction description
created_at: TIMESTAMP - Creation time
updated_at: TIMESTAMP - Update time
Index: wallet_id, type, status
Shops
shop_id (PK): UUID - Shop identifier
user_id (FK): UUID - Reference to Users table
name: VARCHAR(255) - Shop name
description: TEXT - Shop description
logo_url: VARCHAR(255) - URL logo
cover_photo_url: VARCHAR(255) - Cover photo URL
contact_email: VARCHAR(100) - Contact email
contact_phone: VARCHAR(20) - Contact phone number
address: TEXT - Address
city: VARCHAR(100) - City
country: VARCHAR(100) - Country
postal_code: VARCHAR(20) - Postal code
business_registration: VARCHAR(100) - Business registration code
rating: DECIMAL(3,2) - Average rating
total_reviews: INT - Total reviews
is_verified: BOOLEAN - Verified
status: ENUM('active', 'inactive', 'suspended') - Status
created_at: TIMESTAMP - Creation time
updated_at: TIMESTAMP - Update time
Index: user_id
ProductCategories (Product categories) product)
category_id (PK): UUID - Category identifier
parent_id (FK, nullable): UUID - Reference to parent category (if any)
name: VARCHAR(100) - Category name
slug: VARCHAR(100) - URL-friendly category name
description: TEXT - Category description
icon_url: VARCHAR(255) - Icon URL
image_url: VARCHAR(255) - Image URL
level: INT - Level in hierarchy
position: INT - Sort position
product_count: INT - Number of products (denormalized)
status: ENUM('active', 'inactive') - Status
created_at: TIMESTAMP - Creation time
updated_at: TIMESTAMP - Update time
Index: parent_id, slug (unique)

Products
product_id (PK): UUID - Identifier product
shop_id (FK): UUID - Reference to the Shops table
name: VARCHAR(255) - Product name
slug: VARCHAR(255) - URL-friendly product name
description: TEXT - Product description
price: DECIMAL(10,2) - Product price
sale_price: DECIMAL(10,2) - Sale price (if applicable)
currency: VARCHAR(3) - Currency
stock_quantity: INT - Stock quantity
sku: VARCHAR(100) - SKU code
weight: DECIMAL(10,2) - Weight
weight_unit: VARCHAR(10) - Weight unit
dimensions: VARCHAR(50) - Dimensions (length x width x height)
condition: ENUM('new', 'used', 'refurbished') - Status
is_featured: BOOLEAN - Featured not yet
rating: DECIMAL(3,2) - Average rating
total_reviews: INT - Total reviews
total_sales: INT - Total quantity sold
status: ENUM('active', 'inactive', 'out_of_stock', 'discontinued') - Status
created_at: TIMESTAMP - Creation time
updated_at: TIMESTAMP - Update time
Index: shop_id, slug, status
ProductImages (Product images)
image_id (PK): UUID - Image identifier
product_id (FK): UUID - Reference to Products table
image_url: VARCHAR(255) - Image URL
thumbnail_url: VARCHAR(255) - Thumbnail URL
alt_text: VARCHAR(255) - Alternative text
position: INT - Sort position
is_primary: BOOLEAN - Is the primary image not
created_at: TIMESTAMP - Creation time
Index: product_id
ProductCategorizaton (Relationship between Product and Category)
product_category_id (PK): UUID - Identifier
product_id (FK): UUID - Reference to Products table
category_id (FK): UUID - Reference to ProductCategories table
is_primary: BOOLEAN - Is the primary category not
created_at: TIMESTAMP - Creation time
Index: (product_id, category_id) - Unique
Index: category_id
ProductReviews (Product Reviews)
review_id (PK): UUID - Review identifier
product_id (FK): UUID - Reference to Products table
user_id (FK): UUID - Reference to Users table
order_item_id (FK): UUID - Reference to OrderItems table
rating: INT - Rating (1-5 stars)
title: VARCHAR(255) - Review title
content: TEXT - Review content
likes_count: INT - Number of likes (denormalized)
media_urls: JSON - URLs of attached media
is_verified_purchase: BOOLEAN - Is the purchaser verified
created_at: TIMESTAMP - Time of creation
updated_at: TIMESTAMP - Time of update
status: ENUM('pending', 'approved', 'rejected') - Status
Index: product_id, user_id, (user_id, product_id) - Unique
Orders
order_id (PK): UUID - Order identifier
user_id (FK): UUID - Reference to Users table
order_number: VARCHAR(50) - Displayed order number
total_amount: DECIMAL(12,2) - Total
subtotal: DECIMAL(12,2) - Subtotal (before taxes and shipping)
tax_amount: DECIMAL(10,2) - Tax
shipping_amount: DECIMAL(10,2) - Shipping
discount_amount: DECIMAL(10,2) - Discount
currency: VARCHAR(3) - Currency
payment_method: VARCHAR(50) - Payment method
payment_status: ENUM('pending', 'paid', 'failed', 'refunded') - Payment status
shipping_method: VARCHAR(100) - Shipping method
shipping_status: ENUM('pending', 'processing', 'shipped', 'delivered', 'cancelled') - Shipping status
order_status: ENUM('pending', 'processing', 'completed', 'cancelled', 'refunded') - Order status
tracking_number: VARCHAR(100) - Tracking code
notes: TEXT - Notes
created_at: TIMESTAMP - Creation time
updated_at: TIMESTAMP - Update time
completed_at: TIMESTAMP - Completion time
Index: user_id, order_number (unique), order_status
OrderItems (Order details)
order_item_id (PK): UUID - Order detail identifier
order_id (FK): UUID - Reference to Orders table
product_id (FK): UUID - Reference to Products table
shop_id (FK): UUID - Reference to Shops table
quantity: INT - Quantity
unit_price: DECIMAL(10,2) - Unit price
total_price: DECIMAL(12,2) - Total price (unit price x number quantity)
discount_amount: DECIMAL(10,2) - Discount
tax_amount: DECIMAL(10,2) - Tax
status: ENUM('pending', 'processing', 'shipped', 'delivered', 'cancelled', 'refunded') - Status
created_at: TIMESTAMP - Creation time
updated_at: TIMESTAMP - Update time
Index: order_id, product_id, shop_id
ShippingAddresses (Shipping Address)
address_id (PK): UUID - Address identifier
user_id (FK): UUID - Reference to Users table
recipient_name: VARCHAR(100) - Recipient name
phone_number: VARCHAR(20) - Phone number
address_line1: VARCHAR(255) - Line 1 address
address_line2: VARCHAR(255) - Line 2 address (optional)
city: VARCHAR(100) - City
state: VARCHAR(100) - Province/State
postal_code: VARCHAR(20) - Postal code
country: VARCHAR(100) - Country
is_default: BOOLEAN - Is the default address not
address_type: ENUM('home', 'work', 'other') - Address type
created_at: TIMESTAMP - Creation time
updated_at: TIMESTAMP - Update time
Index: user_id
Notifications
notification_id (PK): UUID - Notification identifier
user_id (FK): UUID - Reference to Users table
type: ENUM('like', 'comment', 'follow', 'share', 'mention', 'purchase', 'order', 'system') - Notification type
title: VARCHAR(255) - Notification title
content: TEXT - Message content
reference_type: VARCHAR(50) - Reference object type
reference_id: UUID - Reference object ID
is_read: BOOLEAN - Read yet
created_at: TIMESTAMP - Creation time
Index: user_id, type, is_read, created_at
UserBadges (User Badges)
badge_id (PK): UUID - Badge identifier
user_id (FK): UUID - Reference to Users table
badge_type: VARCHAR(50) - Badge type
badge_name: VARCHAR(100) - Badge name
badge_icon: VARCHAR(255) - Badge icon URL
description: TEXT - Badge description
awarded_at: TIMESTAMP - Time received
expires_at: TIMESTAMP - Expiration time (if any)
created_at: TIMESTAMP - Creation time
Index: user_id, badge_type
ReportedContent
report_id (PK): UUID - Report identifier
reporter_id (FK): UUID - Reference to the Users table
content_type: ENUM('post', 'comment', 'user', 'recipe', 'product', 'shop') - Content type
content_id: UUID - ID of the content
reason: ENUM('spam', 'inappropriate', 'copyright', 'offensive', 'scam', 'other') - Reason for reporting
description: TEXT - Detailed description
status: ENUM('pending', 'reviewed', 'actioned', 'rejected') - Status
admin_notes: TEXT - Admin's notes
created_at: TIMESTAMP - Creation time

[Users] 1--* [Posts]
[Users] 1--* [Comments]
[Users] 1--* [Likes]
[Users] 1--* [Followers
] [Users] 1--* [Purchases] 
[Users] 1--* [Products] (Via Shop) 
[Posts] 1--* [Comments]
[Posts] 1--* [Likes]
[Posts] 1--* [Shares]
[Posts] 1--1 [Recipes] (Optional) 
[Recipes] 1--* [Ingredients]
[Recipes] 1--* [Steps]
[Products] 1--* [ProductCategories] 
[Products] 1--* [ProductImages]
[Products] 1--* [Orders]
[Orders] 1--* [OrderItems]


Servic and their assigned table
User-service : Users, UserAuthentication, UserWallet, WalletTransactions
Post-service : Posts, PostMedia, Likes, Comments, Shares
Recipe-service: Recipes, RecipeIngredients, RecipeSteps, RecipePurchases
Follow-service: UserFollowers
Tage-service: Tag, PostTags,